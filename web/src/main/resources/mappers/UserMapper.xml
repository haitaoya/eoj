<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyoj.web.mapper.UserMapper">
	<!-- ResultMap -->
	<resultMap id="UserResultMap" 
		type="com.easyoj.web.model.User">
		<id property="uid" column="uid" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="email" column="email" />
		<association property="userGroup" 
			javaType="com.easyoj.web.model.UserGroup" 
			column="user_group_id"
			select="com.easyoj.web.mapper.UserGroupMapper.getUserGroupUsingId" />
		<association property="preferLanguage" 
			javaType="com.easyoj.web.model.Language" 
			column="prefer_language_id"
			select="com.easyoj.web.mapper.LanguageMapper.getLanguageUsingId" />
	</resultMap>
	<resultMap id="UserRankMap" 
		type="com.easyoj.web.model.UserRank">
		<id property="uid" column="uid" />
		<result property="username" column="username" />
		<result property="submissionNum" column="submissionNum" />
		<result property="acceptNum" column="acceptNum" />
	</resultMap>
	<!-- Methods -->
	<select id="getNumberOfUsersUsingUserGroup" 
		parameterType="com.easyoj.web.model.UserGroup"
		resultType="long"
		useCache="true">
		SELECT COUNT(*) 
		FROM eoj_users 
		WHERE user_group_id = #{userGroup.userGroupId}
	</select>
	<select id="getNumberOfUsersUsingUserGroupAndUsername"
		parameterType="map"
		resultType="long"
		useCache="true">
		SELECT COUNT(*)
		FROM eoj_users
		<where>
			<if test="userGroup != null">
         		user_group_id = #{userGroup.userGroupId}
			</if>
			<if test="username != null and username != ''">
         		AND username LIKE "%"#{username}"%"
			</if>
		</where>
	</select>
	<select id="getNumberOfUsersUsingLanguage" 
		parameterType="int"
		resultType="long"
		useCache="true">
		SELECT COUNT(*) 
		FROM eoj_users 
		WHERE prefer_language_id = #{languageId}
	</select>
	<select id="getUserUsingUid" 
		parameterType="long"
		resultMap="UserResultMap"
		useCache="true">
		SELECT * 
		FROM eoj_users 
		WHERE uid = #{uid}
	</select>
	<select id="getUserUsingUsername" 
		parameterType="String"
		resultMap="UserResultMap"
		useCache="true">
		SELECT * 
		FROM eoj_users 
		WHERE username = #{username}
	</select>
	<select id="getUserUsingEmail" 
		parameterType="String"
		resultMap="UserResultMap"
		useCache="true">
		SELECT * 
		FROM eoj_users 
		WHERE email = #{email}
	</select>
	<select id="getUserUsingUserGroup" 
		parameterType="map"
		resultMap="UserResultMap"
		useCache="true">
		SELECT * 
		FROM eoj_users 
		WHERE user_group_id = #{userGroup.userGroupId}
		AND uid > #{uid}
		LIMIT #{limit}
	</select>
	<select id="getRankListOfUsers" 
		parameterType="map"
		resultMap="UserRankMap"
		useCache="true">
		SELECT uid,username,submissionNum,acceptNum from(
		SELECT uid,username,
		(select count(*) 
			from easyoj.eoj_submissions s
			where s.uid = u.uid
			<if test="startTime!=null and startTime!=''">
				And s.submission_submit_time &gt;= #{startTime}
			</if>
		) as submissionNum,
		(select COUNT(DISTINCT s.problem_id) 
			from easyoj.eoj_submissions s
			where s.uid = u.uid 
			and s.submission_judge_result='AC'
			<if test="startTime!=null and startTime!=''"> 
				And s.submission_submit_time &gt;= #{startTime}
			</if>
		) as acceptNum	
		FROM easyoj.eoj_users u
		<where>
			<if test="userGroup != null">
         		user_group_id = #{userGroup.userGroupId}
			</if>
		</where>
		ORDER BY acceptNum DESC,submissionNum ASC
		LIMIT #{offset}, #{limit} 
		) as rank
		where rank.submissionNum>0
	</select>
	<select id="getUserUsingUserGroupAndUsername" 
		parameterType="map"
		resultMap="UserResultMap"
		useCache="true">
		SELECT * 
		FROM eoj_users 
		<where>
			<if test="userGroup != null">
         		user_group_id = #{userGroup.userGroupId}
			</if>
			<if test="username != null and username != ''">
         		AND username LIKE "%"#{username}"%"
			</if>
		</where>
		LIMIT #{offset}, #{limit}
	</select>
	<insert id="createUser" 
		parameterType="com.easyoj.web.model.User"
		flushCache="true" 
		keyProperty="uid" 
		keyColumn="uid"
		useGeneratedKeys="true">
		INSERT INTO eoj_users (username, password, email, user_group_id, prefer_language_id) 
		VALUES (#{username}, #{password}, #{email}, #{userGroup.userGroupId}, #{preferLanguage.languageId})
	</insert>
	<update id="updateUser"
		parameterType="com.easyoj.web.model.User"
		flushCache="true">
		UPDATE eoj_users 
		SET username = #{username}, password = #{password}, email = #{email}, user_group_id = #{userGroup.userGroupId}, prefer_language_id = #{preferLanguage.languageId} 
		WHERE uid = #{uid}
	</update>
	<delete id="deleteUser"
		parameterType="long"
		flushCache="true">
		DELETE FROM eoj_users 
		WHERE uid = #{uid}
	</delete>
</mapper>