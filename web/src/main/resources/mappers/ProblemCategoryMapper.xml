<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyoj.web.mapper.ProblemCategoryMapper">
	<!-- ResultMap -->
	<resultMap id="ProblemCategoryResultMap" 
		type="com.easyoj.web.model.ProblemCategory">
		<id property="problemCategoryId" column="problem_category_id" />
		<result property="problemCategorySlug" column="problem_category_slug" />
		<result property="problemCategoryName" column="problem_category_name" />
		<result property="parentProblemCategoryId" column="problem_category_parent_id" />
	</resultMap>
	<resultMap id="ProblemCategoryRelationshipResultMap"
		type="com.easyoj.web.model.ProblemCategoryRelationship">
		<id property="problemId" column="problem_id" />
		<id property="problemCategoryId" column="problem_category_id" />
		<result property="problemCategorySlug" column="problem_category_slug" />
		<result property="problemCategoryName" column="problem_category_name" />
	</resultMap>

	<!-- Methods -->
	<select id="getProblemCategories"
		resultMap="ProblemCategoryResultMap"
		useCache="true">
		SELECT *
		FROM eoj_problem_categories
	</select>
	<select id="getProblemCategoryUsingCategoryId"
		parameterType="int"
		resultMap="ProblemCategoryResultMap"
		useCache="true">
		SELECT *
		FROM eoj_problem_categories
		WHERE problem_category_id = #{problemCategoryId}
	</select>
	<select id="getProblemCategoriesUsingProblemId"
		parameterType="long"
		resultMap="ProblemCategoryResultMap"
		useCache="true">
		SELECT *
		FROM eoj_problem_category_relationships
		NATURAL JOIN eoj_problem_categories
		WHERE problem_id = #{problemId}
	</select>
	<select id="getProblemCategoriesOfProblems"
		parameterType="map"
		resultMap="ProblemCategoryRelationshipResultMap"
		useCache="true">
		<!-- SELECT *
		FROM eoj_problem_category_relationships
		NATURAL JOIN eoj_problem_categories
		WHERE problem_id &gt;= #{problemIdLowerBound}
		AND problem_id &lt;= #{problemIdUpperBound} -->
		SELECT problem_id,problem_category_id,problem_category_slug,problem_category_name
		FROM eoj_problems p 
		NATURAL JOIN eoj_problem_category_relationships pcr<!-- 三表连接 -->
		NATURAL JOIN eoj_problem_tag_relationships ptr
		NATURAL JOIN eoj_problem_categories pc
		WHERE p.problem_id &gt;= #{problemId} 
		AND p.problem_id &lt;(#{problemId}+#{limit})
		<if test="isPublicOnly == true">
			AND problem_is_public = 1
		</if>
		<if test="keyword != null and keyword != ''">
			AND problem_name LIKE "%"#{keyword}"%"
		</if>
		<if test="problemCategoryId != 0">
			AND problem_category_id = #{problemCategoryId}
		</if>
		<if test="problemTagId != 0">
			AND problem_tag_id = #{problemTagId}
		</if>
		GROUP BY problem_id,problem_category_id
		order by p.problem_id
		<!-- LIMIT #{limit}  改为 用problem id 控制范围 -->
	</select>
	<select id="getProblemCategoryUsingCategorySlug"
		parameterType="String"
		resultMap="ProblemCategoryResultMap"
		useCache="true">
		SELECT *
		FROM eoj_problem_categories
		WHERE problem_category_slug = #{problemCategorySlug}
	</select>
	<insert id="createProblemCategory" 
		parameterType="com.easyoj.web.model.ProblemCategory"
		flushCache="true" 
		keyProperty="problemCategoryId" 
		keyColumn="problem_category_id"
		useGeneratedKeys="true">
		INSERT INTO eoj_problem_categories (problem_category_slug, problem_category_name, problem_category_parent_id) 
		VALUES (#{problemCategorySlug}, #{problemCategoryName}, #{parentProblemCategoryId})
	</insert>
	<insert id="createProblemCategoryRelationship" 
		parameterType="map"
		flushCache="true">
		INSERT INTO eoj_problem_category_relationships (problem_id, problem_category_id) 
		VALUES (#{problemId}, #{problemCategory.problemCategoryId})
	</insert>
	<update id="updateProblemCategory"
		parameterType="com.easyoj.web.model.ProblemCategory"
		flushCache="true">
		UPDATE eoj_problem_categories 
		SET problem_category_slug = #{problemCategorySlug}, problem_category_name = #{problemCategoryName}, problem_category_parent_id = #{parentProblemCategoryId}
		WHERE problem_category_id = #{problemCategoryId}
	</update>
	<delete id="deleteProblemCategory"
		parameterType="int"
		flushCache="true">
		DELETE FROM eoj_problem_categories 
		WHERE problem_category_id = #{problemCategoryId}
	</delete>
	<delete id="deleteProblemCategoryRelationship"
		parameterType="long"
		flushCache="true">
		DELETE FROM eoj_problem_category_relationships 
		WHERE problem_id = #{problemId}
	</delete>
</mapper>